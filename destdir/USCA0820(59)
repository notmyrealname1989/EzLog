st + ')');
	
	var task = wxtools.MapPane_overlayTasks[id];
	var timestamp = serieslist.seriesInfo[task.series].series[0].date;
	
	MapPane.drawOverlay(id, task.center, task.width, task.height, task.level, task.series, task.transparency, timestamp);
	
	wxtools.MapPane_overlayTasks[id] = null;
	delete wxtools.MapPane_overlayTasks[id];
	
	var head = document.getElementsByTagName('head')[0];
	var script = document.getElementById('serieslist_include_' + id);
	if (script) {
		head.removeChild(script);
		
		delete script;
	}
};










/**
 * MapPane
 *  a static class (meaning you never create an instance object of type MapPane) that can render static map
 *  placements directly into a page.  It supports 3 methods for doing this:
 *   1. draw - uses document.write to insert the map directly into the page whereever the script is placed
 *   2. create - returns a DOM element that can be inserted into the page wherever you wish
 *   3. getSource - returns a String that you can write into the innerHTML of some page element
 */
wxtools.MapPane = function() {
	if (wxtools.MapPane_debug) wxtools.log('MapPane()');
};


with({
	
	// create a new projection for this level
	getProjection:function(level) {
		if (wxtools.MapPane_debug) wxtools.log('MapPane.getProjection(' + level + ')');
		//alert("Zoom Level = "+ level);
		var layer_width = Math.pow(2,