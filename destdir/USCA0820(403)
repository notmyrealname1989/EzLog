(tileName, tileSet, timestamp) {
		if (wxtools.MapPane_debug) wxtools.log('MapPane.getTileURL(' + tileName + ',' + tileSet + ',' + timestamp + ')');
		
		if (tileSet.length == 1) {
			// this is a Microsoft tile
			var number = tileName.substr(tileName.length - 1);
			return ['http://',tileSet,number,'.ortho.tiles.virtualearth.net/tiles/',tileSet,tileName,(tileSet=='r'?'.png?g=15':'.jpg?g=1')].join('');
		} else {
			// this is a Ginsu tile
			// get the last character in the tileName and use it as the Hash key
			var hashKey = Number(tileName.substr((tileName.length - 1),1));
			return [wxtools.MapPane_tilesPathHash[hashKey],tileSet,'/',timestamp,'/',tileName,'.png'].join('');
		}
	},
	
	// computes the quad-encoded tile name
	getTileName:function(tile, level) {
		if (wxtools.MapPane_debug) wxtools.log('MapPane.getTileName(' + tile + ',' + level + ')');
		//alert("Debugging for Daniel: "+tile + " " + level);
		var digits = '';
		
		var bitmask;
		var digit1;
		var digit2;
		for (var i = level; i > 0; i--) {
			digit1 = wxtools.MapPane_bitmasks[i] & tile.x;
			digit2 = wxtools.MapPane_bitmasks[i] & tile.y;
			digits += ((digit1 == 0?0:1) + (digit2 == 0?0:2))
		}
		return digits;
	},
	
	// returns the coordinates of the tile which contains the given geolocation
	getTilePosition:function(tileXY, level, width, height) {
		if (wxtools.MapPane_debug) wx