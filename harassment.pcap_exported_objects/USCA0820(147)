is.height = height;
	
	this.minXY = minXY.clone();
	this.maxXY = maxXY.clone();
	
	this.minXY.y = MapPane_MercatorProjection.mercatorY(minXY.y);
	this.maxXY.y = MapPane_MercatorProjection.mercatorY(maxXY.y);
	//alert("Debugging for Daniel:<BR>"+ "Width= "+this.width+", Height= "+this.height );
	this.deltaXY = this.minXY.decrement(this.maxXY);
}
// apply the Mercator functions to scew the y value
wxtools.MapPane_MercatorProjection.mercatorY = function(y) {
	if (wxtools.MapPane_debug) wxtools.log('MercatorProjection.mercatorY(' + y + ')');
	
	var rY = MapPane_Point.toRadians(y);
	var pY = Math.log((1 + Math.sin(rY))/(1 - Math.sin(rY))) / 2;
	return MapPane_Point.toDegrees(pY);
};
// unscew the y value back to normal
wxtools.MapPane_MercatorProjection.unmercatorY = function(y) {
	if (wxtools.MapPane_debug) wxtools.log('MercatorProjection.unmercatorY(' + y + ')');
	
	var rY = MapPane_Point.toRadians(y);
	var pY = 2 * Math.atan(Math.pow(Math.E, rY)) - (Math.PI/2);
	return MapPane_Point.toDegrees(pY);
};

wxtools.MapPane_MercatorProjection.prototype = {
	// convert the point from lat/long to x/y coordinates in the projection
	project: function(point) {
		if (wxtools.MapPane_debug) wxtools.log('MercatorProjection.project(' + point + ')');
		
		var pX = (point.x - this.maxXY.x)/this.deltaXY.x;
		var pY = (MapPane_MercatorProjection.mercatorY(point.y) - this